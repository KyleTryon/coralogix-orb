description: |
  Send logs to Coralogix.
parameters:
  file:
    type: string
    description: Absolute or relative path to the file for sending.
  private_key:
    type: env_var_name
    description: Coralogix Private Key.
    default: CORALOGIX_PRIVATE_KEY
  application:
    type: string
    description: Your application name.
    default: CircleCI
  subsystem:
    type: string
    description: Your subsystem name.
    default: workflow
  category:
    type: string
    description: Records category.
    default: artifact
  class:
    type: string
    description: Class name.
    default: ''
  method:
    type: string
    description: Method name.
    default: ''
  thread:
    type: string
    description: Thread.
    default: ''
  newline_pattern:
    type: string
    description: Regular expression to split records.
    default: '\n|\r|\r\n'
steps:
  - run:
      name: Send to Coralogix
      when: always
      command: |
        if [ ! -f "<<parameters.file>>" ]; then
            echo "File not found!"
            exit 0
        fi
        LOG_FILE=$(realpath "<<parameters.file>>")
        LOG_BULKS=$(mktemp -d)
        pushd $LOG_BULKS
          split -C 2M -d "$LOG_FILE" ''
        popd
        for bulk in $LOG_BULKS/*; do
          LOG_BULK=$(jq -nMc --rawfile lines "$bulk" --arg private_key ${<<parameters.private_key>>} '{
            "privateKey": $private_key,
            "applicationName": "<<parameters.application>>",
            "subsystemName": "<<parameters.subsystem>>",
            "computerName": "CircleCI",
            "logEntries": [
              $lines | split("<<parameters.newline_pattern>>"; "") | {
                "timestamp": (now * 1000),
                "severity": 3,
                "text": .[] | select(.!=""),
                "category": "<<parameters.category>>",
                "className": "<<parameters.class>>",
                "methodName": "<<parameters.method>>",
                "threadId": "<<parameters.thread>>"
              }
            ]
          }')
          curl -X POST -H 'Content-Type: application/json' -d "$LOG_BULK" -s 'https://api.coralogix.com/api/v1/logs' > /dev/null
        done
        rm -rf "$LOG_BULKS"
