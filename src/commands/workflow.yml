description: |
  Build workflow logs and stats.
parameters:
  circle-token:
    type: env_var_name
    description: |
      Enter your CircleCI Personal Access Token for interacting with the API.
      You may generate one here: https://circleci.com/account/api
    default: CIRCLE_TOKEN
steps:
  - run:
      name: Build workflow data
      when: always
      command: |
        WORKFLOW=$(curl -s -H "Circle-Token: <<parameters.circle-token>>" "https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID")
        WORKFLOW_JOBS=$(curl -s -H "Circle-Token: <<parameters.circle-token>>" "https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID/jobs" | jq '.items')
        WORKFLOW_LENGTH=$(echo "$WORKFLOW_JOBS" | jq 'length')
        PROJECT_SLUG=$(echo "$WORKFLOW" | jq -r '.project_slug')

        mkdir -p /tmp/coralogix
        rm -f /tmp/coralogix/workflow-*.log
        for (( i=0; i<$WORKFLOW_LENGTH; )); do
            JOB_NUMBER=$(echo "$WORKFLOW_JOBS" | jq -r "sort_by(.job_number) | .[$i].job_number")
            JOB_STATUS=$(echo "$WORKFLOW_JOBS" | jq -r "sort_by(.job_number) | .[$i].status")
            if [ "$JOB_NUMBER" != "$CIRCLE_BUILD_NUM" ]; then
                if [ "$JOB_STATUS" != "running" ]; then
                    JOB=$(curl -s -H "Circle-Token: <<parameters.circle-token>>" "https://circleci.com/api/v1.1/project/$PROJECT_SLUG/$JOB_NUMBER" | jq)
                    JOB_LOGS=$(echo "$JOB" | jq '.steps[].actions[].output_url | select(.!=null)')
                    echo "$JOB" | jq -c 'del(.steps, .circle_yml)' >> /tmp/coralogix/workflow-stats.log
                    echo "$JOB_LOGS" | xargs -n1 curl -s --output - --compressed | jq -r '.[].message' >> /tmp/coralogix/workflow-logs.log
                else
                    echo "Job is still running..."
                    sleep 10
                fi
            fi
            WORKFLOW_JOBS=$(curl -s -H "Circle-Token: <<parameters.circle-token>>" "https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID/jobs" | jq '.items')
            i="$((i+1))"
        done
